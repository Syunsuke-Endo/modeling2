<!DOCTYPE html>
<html lang="ja">
<head>
  <meta charset="UTF-8">
  <title>疑似自転と公転</title>

  <!-- three.jsを読み込む(ローカル) -->
  <!-- <script src="./three.js"></script> -->
  <!-- three.jsを読み込む(CDN) -->
  <script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/99/three.min.js"></script>

</head>
<body>
<script>
  var init = function() {

    var width = 800,
        height = 800;

          
    // レンダラーを作成
    var renderer = new THREE.WebGLRenderer();
    renderer.setSize(width, height);
    document.body.appendChild(renderer.domElement);

    // シーンを作成
    var scene = new THREE.Scene();

    // カメラを作成
    var camera = new THREE.PerspectiveCamera(45, width / height, 1, 1000);
  
    

//球 半径、縦横に何分割か
var sphere1Geometry = new THREE.SphereGeometry( 50.0, 64,64 );
var sphere2Geometry = new THREE.SphereGeometry( 3.0, 64,64 );
var sphere3Geometry = new THREE.SphereGeometry( 9.0, 64,64 );
//球 色、ワイヤー構造
var sphere1Material = new THREE. MeshPhongMaterial( { color: 0xff6600, wireframe: true } );
var sphere2Material = new THREE. MeshPhongMaterial( { color: 0x87ceeb, wireframe: true } );
var sphere3Material = new THREE. MeshPhongMaterial( { color: 0xffd700, wireframe: true } );
//球の定義
var sphere1 = new THREE.Mesh(sphere1Geometry, sphere1Material );
var sphere2 = new THREE.Mesh(sphere2Geometry, sphere2Material );
var sphere3 = new THREE.Mesh(sphere3Geometry, sphere3Material);
//カメラの位置と向きを設定
camera.position.set(0,180,180);
camera.lookAt(sphere1.position);



    // 平行光源1
    var directionalLight1 = new THREE.DirectionalLight(0xffffff);
    directionalLight1.position.set(1, 1, 1);
    // シーンに追加
    scene.add(directionalLight1);
    // 平行光源2
        var directionalLight2 = new THREE.DirectionalLight(0xffffff);
    directionalLight2.position.set(-1, 1, 1);
    // シーンに追加
    scene.add(directionalLight2);

    // 初回実行
    var update = function() {
      requestAnimationFrame(update);
      const timer = Date.now() * 0.01;
      //初期位置
      sphere1.position.set( 0, 0, 0 );
      sphere2.position.set( 30, 0, 0);
      sphere3.position.set( 50, 0, 0);
      //外側を回る球
      sphere2.position.x= Math.cos(timer * 0.1) * 70;
      sphere2.position.y= 0;
      sphere2.position.z= Math.sin(timer * 0.1) * 70;
      sphere3.position.x= Math.cos(timer * 0.05) * 100;
      sphere3.position.y= 0;
      sphere3.position.z= Math.sin(timer * 0.05) * 100;
      scene.add( sphere1 );
      scene.add( sphere2 );
      scene.add( sphere3 );
      // 球を回転させる
      sphere1.rotation.y += 0.01;
      sphere2.rotation.x += 0.1;
      sphere2.rotation.y += 0.1;
      sphere3.rotation.x += 0.05;
      sphere3.rotation.y += 0.05;

      renderer.render(scene, camera);
    };
    update();
  }
  window.addEventListener('DOMContentLoaded', init);
</script>
</body>
</html>
